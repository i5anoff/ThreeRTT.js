(function(a){for(var b in a)if(!window[b])throw"Error: ThreeRTT requires "+a[b];})({THREE:"Three.js"});window.ThreeRTT=window.ThreeRTT||{};ThreeRTT.getShader=function(a){var b=document.getElementById(a);return b&&b.innerText||a};_.loop=function(a,b){for(var c=0;c<a;++c)b(c)};ThreeRTT.getShader=function(a){var b=document.getElementById(a);return b&&(b.innerText||b.textContent)||a};ThreeRTT.isPowerOfTwo=function(a){return 0===(a&a-1)};
ThreeRTT.toTarget=function(a){return ThreeRTT.Stage&&a instanceof ThreeRTT.Stage?a.target:ThreeRTT.World&&a instanceof ThreeRTT.World?a.target():a};ThreeRTT.toTexture=function(a){a=ThreeRTT.toTarget(a);return ThreeRTT.RenderTarget&&a instanceof ThreeRTT.RenderTarget?a.read():a};MicroEvent.prototype.on=function(){MicroEvent.prototype.bind.apply(this,arguments);return this};MicroEvent.prototype.emit=function(){MicroEvent.prototype.trigger.apply(this,arguments);return this};
MicroEvent.mixin=function(a){for(var b=["bind","unbind","trigger","on","emit"],c=0;c<b.length;c++)a.prototype[b[c]]=MicroEvent.prototype[b[c]]};ThreeRTT.Stage=function(a,b){b=_.extend({history:0,camera:{},scene:null},b);b.camera.aspect=b.camera.aspect||b.width/b.height;this.scene=b.scene||new THREE.Scene;this.camera=ThreeRTT.Camera(b.camera);this.scene.add(this.camera);this.target=new ThreeRTT.RenderTarget(a,b);this.reset();this.size(b.width,b.height)};
ThreeRTT.Stage.prototype={options:function(){return this.target.options},reset:function(){this.renderables&&_.each(this.renderables,function(a){this.scene.remove(a)}.bind(this));this.passes=[];this.renderables=[]},paint:function(a,b){var c=new THREE.Object3D;c.frustumCulled=!1;c.visible=!0;if(!b){var d=new ThreeRTT.FragmentMaterial(this,"generic-fragment-texture"),d=this._surface(d);c.add(d)}c.add(a);this.scene.add(c);this.passes.push(1);this.renderables.push(c)},iterate:function(a,b){var c=this._surface(b);
c.visible=!1;this.scene.add(c);this.passes.push(a);this.renderables.push(c);return this},fragment:function(a){this.iterate(1,a);return this},size:function(a,b){a=Math.floor(a);b=Math.floor(b);this.camera.aspect=a/b;this.target.size(a,b);return this},read:function(a){return this.target.read(a)},uniform:function(){return this.target.uniform()},render:function(){function a(b,c){b.visible=c;_.each(b.children,function(b){a(b,c)})}this.target.clear();_.each(this.passes,function(b,c){a(this.renderables[c],
!0);_.loop(b,function(){this.target.render(this.scene,this.camera)}.bind(this));a(this.renderables[c],!1)}.bind(this));return this},clear:function(){this.target.clear();return this},destroy:function(){this.target.deallocate();this.target=this.camera=this.scene=null},_surface:function(a){var b=new THREE.Mesh(new ThreeRTT.ScreenGeometry,{});b.frustumCulled=!1;b.material=a;b.renderDepth=Infinity;return b}};
ThreeRTT.Compose=function(a,b,c,d){THREE.Object3D.call(this);a=new ThreeRTT.FragmentMaterial(a,b,c,d);b=new ThreeRTT.ScreenGeometry;a=this.mesh=new THREE.Mesh(b,a);a.frustumCulled=!1;this.add(a)};ThreeRTT.Compose.prototype=new THREE.Object3D;
ThreeRTT.Camera=function(a){if(a.constructor instanceof THREE.Camera)return a;a=_.extend({aspect:1,far:1E4,fov:85,near:0.01,ortho:!1,scale:1},a);if(a.ortho){var b=a.scale,c=a.aspect;return new THREE.OrthographicCamera(-b*c,b*c,-b,b,a.near,a.far)}return new THREE.PerspectiveCamera(a.fov,a.aspect,a.near,a.far)};
ThreeRTT.RenderTarget=function(a,b){this.options=b=_.extend({width:256,height:256,texture:{},clear:{color:!1,depth:!1,stencil:!1},clearColor:16777215,clearAlpha:1,history:0,scene:null,camera:null,autoAdvance:!0},b);this.renderer=a;if((!ThreeRTT.isPowerOfTwo(b.width)||!ThreeRTT.isPowerOfTwo(b.height))&&!b.texture.minFilter)b.texture.minFilter=THREE.LinearFilter;this.history(this.options.history,!0);this.size(b.width,b.height);this.clear()};
ThreeRTT.RenderTarget.prototype={read:function(a){a=Math.max(0,Math.min(this.options.history,Math.abs(a||0)));return this.virtuals[a]},write:function(){return this.targets[this.index]},history:function(a,b){void 0!==a&&(this._history=a,this.buffers=a+2,b||this.allocate());return this._history},size:function(a,b){a&&b&&(this.width=Math.floor(a),this.height=Math.floor(b),this.allocate());return{width:this.width,height:this.height}},deallocate:function(){this.deallocateTargets()},allocate:function(){this.deallocateTargets();
this.allocateTargets();this.allocateVirtuals()},deallocateTargets:function(){_.each(this.targets||[],function(a){this.renderer.deallocateRenderTarget(a)}.bind(this))},allocateTargets:function(){var a=this.options;n=this.buffers;var b=this.targets=[];_.loop(n,function(c){b.push(new THREE.WebGLRenderTarget(this.width,this.height,a.texture));b[c].__index=c}.bind(this))},allocateVirtuals:function(){var a=this.targets[0],b=this.virtuals||[];n=Math.max(1,this.buffers-1);n>b.length?_.loop(n-b.length,function(){b.push(a.clone())}.bind(this)):
b=b.slice(0,n);_.each(b,function(a,b){a.width=this.width;a.height=this.height;a.__index=b}.bind(this));this.virtuals=b;this.index=-1;this.advance()},advance:function(){var a=this.targets,b=this.virtuals,c=this.index,d=this.buffers,e=b.length;this.index=c=(c+1)%d;_.loop(e,function(f){var g=b[f];f=a[(e-f+c)%d];g.__webglTexture=f.__webglTexture;g.__webglFramebuffer=f.__webglFramebuffer;g.__webglRenderbuffer=f.__webglRenderbuffer;g.__index=f.__index})},clear:function(){var a=this.options,b=a.clear,c=
this.renderer,d=c.getClearColor().clone(),e=c.getClearAlpha();c.setClearColorHex(a.clearColor,a.clearAlpha);c.clearTarget(this.write(),b.color,b.stencil,b.depth);c.setClearColor(d,e)},render:function(a,b){this.emit("render",a,b);var c=this.renderer.autoClear;this.renderer.autoClear=!1;this.clear();this.renderer.render(a,b,this.write());this.renderer.autoClear=c;this.options.autoAdvance&&this.advance()},uniform:function(a){var b=this.history();if(b){var c=[];_.loop(b+1,function(a){c.push(this.read(-a))}.bind(this));
return{type:"tv",value:c,count:b+1}}return{type:"t",value:a,texture:this.read(),count:1}}};MicroEvent.mixin(ThreeRTT.RenderTarget);ThreeRTT.ScreenGeometry=function(){return new THREE.PlaneGeometry(2,2,1,1)};
ThreeRTT.ShaderMaterial=function(a,b,c,d,e){if(d instanceof Array){var f={};_.each(d,function(a){f["texture"+(i+1)]=a});d=f}else if(d instanceof THREE.Texture||d instanceof ThreeRTT.World||d instanceof THREE.WebGLRenderTarget)d={texture1:d};a instanceof Array||(a=[a]);a=_.map(a,function(a){return ThreeRTT.toTarget(a)});e=_.extend(e||{},{sampleStep:{type:"v2",value:new THREE.Vector2}});_.each(d,function(a,b){e[b]={type:"t",value:ThreeRTT.toTexture(a)}});_.each(a,function(a,b){var c="texture"+(b+1);
a.read&&!e[c]&&(e[c]={type:"t",value:a.read()})});e.texture1&&!e.texture&&(e.texture=e.texture1);a[0].on("render",function(){var b=a[0].options.texture,c=b.wrapT,d={1E3:0,1001:1,1002:0},f=e.sampleStep.value;f.x=1/(a[0].width-(d[b.wrapS]||0));f.y=1/(a[0].height-(d[c]||0))});return new THREE.ShaderMaterial({uniforms:e,vertexShader:ThreeRTT.getShader(b||"generic-vertex"),fragmentShader:ThreeRTT.getShader(c||"generic-fragment-texture")})};
ThreeRTT.FragmentMaterial=function(a,b,c,d){a=new ThreeRTT.ShaderMaterial(a,"generic-vertex-screen",b,c,d);a.side=THREE.DoubleSide;a.depthTest=!1;a.depthWrite=!1;a.transparent=!0;a.blending=THREE.NoBlending;return a};
ThreeRTT.ScaleMaterial=function(a,b,c){var d={};a=ThreeRTT.toTarget(a);b=ThreeRTT.toTarget(b);d=_.extend(d,{sampleAlignment:{type:"v2",value:new THREE.Vector2},texture:{type:"t",value:a.read()}});b.on("render",function(){var e=a,g=b,j=g.height*c/e.height,k=d.sampleAlignment.value;k.x=g.width*c/e.width;k.y=j});var e=new THREE.ShaderMaterial({uniforms:d,vertexShader:ThreeRTT.getShader("rtt-vertex-downsample"),fragmentShader:ThreeRTT.getShader("generic-fragment-texture")});e.side=THREE.DoubleSide;e.depthTest=
!1;e.depthWrite=!1;e.transparent=!0;e.blending=THREE.NoBlending;return e};ThreeRTT.DownsampleMaterial=function(a,b){return new ThreeRTT.ScaleMaterial(a,b,2)};ThreeRTT.UpsampleMaterial=function(a,b){return new ThreeRTT.ScaleMaterial(a,b,0.5)};
ThreeRTT.RaytraceMaterial=function(a,b,c,d){if(c instanceof Array)_.each(c,function(){});else if(c instanceof THREE.Texture||c instanceof ThreeRTT.World||c instanceof THREE.WebGLRenderTarget)c={texture1:c};a=ThreeRTT.toTarget(a);d=_.extend(d||{},{cameraViewport:{type:"v2",value:new THREE.Vector2},cameraWorld:{type:"m4",value:new THREE.Matrix4}});var e=0;_.each(c||[],function(a,b){d[b]={type:"t",value:e++,texture:ThreeRTT.toTexture(a)}});a.on("render",function(a,b){b.updateMatrixWorld();if(b.fov){var c=
Math.tan(b.fov*\u03c0/360);d.cameraViewport.value.set(c*b.aspect,c)}b.matrixWorld&&(d.cameraWorld.value=b.matrixWorld)});return new THREE.ShaderMaterial({uniforms:d,vertexShader:ThreeRTT.getShader("generic-vertex-screen"),fragmentShader:ThreeRTT.getShader(b)})};ThreeRTT.Display=function(a,b,c){a instanceof Array||(a=[a]);this.gx=b||a.length;this.gy=c||1;this.targets=a;this.n=a.length;THREE.Object3D.call(this);this.make()};
ThreeRTT.Display.prototype=_.extend(new THREE.Object3D,{make:function(){for(var a=this.n,b=this.gx,c=this.gy,d=this.targets,e=(b-1)/2,f=(c-1)/2,g=new THREE.PlaneGeometry(1,1,1,1),j=0,k=0;j<a&&k<c;++k)for(var l=0;j<a&&l<b;++l,++j){var h=new THREE.MeshBasicMaterial({color:16777215,map:ThreeRTT.toTexture(d[j]),fog:!1});h.side=THREE.DoubleSide;h=new THREE.Mesh(g,h);h.renderDepth=1E4+Math.random();this.add(h);1<b&&(h.position.x=-e+l);1<c&&(h.position.y=f-k)}}});
