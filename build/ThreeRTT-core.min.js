(function(a){for(var b in a)if(!window[b])throw"Error: ThreeRTT requires "+a[b];})({THREE:"Three.js"});window.ThreeRTT=window.ThreeRTT||{};ThreeRTT.getShader=function(a){var b=document.getElementById(a);return b&&b.innerText||a};_.loop=function(a,b){for(var c=0;c<a;++c)b(c)};ThreeRTT.getShader=function(a){var b=document.getElementById(a);return b&&(b.innerText||b.textContent)||a};ThreeRTT.isPowerOfTwo=function(a){return 0===(a&a-1)};
ThreeRTT.toTarget=function(a){return ThreeRTT.Stage&&a instanceof ThreeRTT.Stage?a.target:ThreeRTT.World&&a instanceof ThreeRTT.World?a.target():a};ThreeRTT.toTexture=function(a){a=ThreeRTT.toTarget(a);if(ThreeRTT.RenderTarget&&a instanceof ThreeRTT.RenderTarget)return a.read()};MicroEvent.prototype.on=function(){MicroEvent.prototype.bind.apply(this,arguments);return this};MicroEvent.prototype.emit=function(){MicroEvent.prototype.trigger.apply(this,arguments);return this};
MicroEvent.mixin=function(a){for(var b=["bind","unbind","trigger","on","emit"],c=0;c<b.length;c++)a.prototype[b[c]]=MicroEvent.prototype[b[c]]};
ThreeRTT.Stage=function(a,b){b=_.extend({history:0,camera:{},material:!1,scene:null},b);b.camera.aspect=b.camera.aspect||b.width/b.height;this.scene=b.scene||new THREE.Scene;this.camera=ThreeRTT.Camera(b.camera);this.scene.add(this.camera);this.target=new ThreeRTT.RenderTarget(a,b);0<=b.history&&(b.material=b.material||new ThreeRTT.FragmentMaterial(this));b.material&&this.material(!0,b.material)};
ThreeRTT.Stage.prototype={material:function(a){a?(this._surface||(this._surface=new THREE.Mesh(new ThreeRTT.ScreenGeometry,{}),this._surface.frustumCulled=!1,this.scene.add(this._surface)),this._surface.material=a):(this.scene.remove(this._surface),this._surface=null);return this},size:function(a,b){this.camera.aspect=a/b;this.target.size(a,b);return this},read:function(a){return this.target.read(a)},uniform:function(){return this.target.uniform()},render:function(){this.target.clear();this.target.render(this.scene,
this.camera);return this},clear:function(){this.target.clear();return this},destroy:function(){this.target.deallocate();this.target=this.camera=this.scene=null}};ThreeRTT.Compose=function(a,b,c,d,e){b=new ThreeRTT.FragmentMaterial(b,c,d,e);c=new ThreeRTT.ScreenGeometry;b=new THREE.Mesh(c,b);b.frustumCulled=!1;a.add(b);this.scene=a;this.mesh=b};ThreeRTT.Compose.prototype.remove=function(){this.scene.remove(this.mesh)};
ThreeRTT.Camera=function(a){if(a.constructor instanceof THREE.Camera)return a;a=_.extend({aspect:1,far:1E4,fov:85,near:0.01,ortho:!1,scale:1},a);if(a.ortho){var b=a.scale,c=a.aspect;return new THREE.OrthographicCamera(-b*c,b*c,-b,b,a.near,a.far)}return new THREE.PerspectiveCamera(a.fov,a.aspect,a.near,a.far)};
ThreeRTT.RenderTarget=function(a,b){this.options=b=_.extend({width:256,height:256,texture:{},clear:{color:!1,depth:!0,stencil:!0},clearColor:16777215,clearAlpha:0,history:0,scene:null,camera:null,autoAdvance:!0},b);this.renderer=a;if((!ThreeRTT.isPowerOfTwo(b.width)||!ThreeRTT.isPowerOfTwo(b.height))&&!b.texture.minFilter)b.texture.minFilter=THREE.LinearFilter;this.history(this.options.history,!0);this.size(b.width,b.height)};
ThreeRTT.RenderTarget.prototype={read:function(a){a=Math.min(this.options.history,Math.abs(a||0));return this.virtuals[a]},write:function(){return this.targets[this.index]},history:function(a,b){void 0!==a&&(this._history=a,this.buffers=a+2,b||this.allocate());return this._history},size:function(a,b){a&&b&&(this.width=Math.floor(a),this.height=Math.floor(b),this.allocate());return{width:this.width,height:this.height}},deallocate:function(){this.deallocateTargets()},allocate:function(){this.deallocateTargets();
this.allocateTargets();this.allocateVirtuals()},deallocateTargets:function(){_.each(this.targets||[],function(a){this.renderer.deallocateRenderTarget(a)}.bind(this))},allocateTargets:function(){var a=this.options;n=this.buffers;var b=this.targets=[];_.loop(n,function(c){b.push(new THREE.WebGLRenderTarget(this.width,this.height,a.texture));b[c].__index=c}.bind(this))},allocateVirtuals:function(){var a=this.targets[0],b=this.virtuals||[];n=this.buffers-1;n>b.length?_.loop(n-b.length,function(){b.push(a.clone())}.bind(this)):
b=b.slice(0,n);_.each(b,function(a,b){a.width=this.width;a.height=this.height;a.__index=b}.bind(this));this.virtuals=b;this.index=-1;this.advance()},advance:function(){var a=this.targets,b=this.virtuals,c=this.index,d=this.buffers;this.index=c=(c+1)%d;_.loop(d-1,function(e){var f=b[e],e=a[(d-1-e+c)%d];f.__webglTexture=e.__webglTexture;f.__webglFramebuffer=e.__webglFramebuffer;f.__webglRenderbuffer=e.__webglRenderbuffer;f.__index=e.__index})},clear:function(){var a=this.options,b=a.clear,c=this.renderer;
c.setClearColorHex(a.clearColor,a.clearAlpha);c.clearTarget(this.write(),b.color,b.stencil,b.depth)},render:function(a,b){this.emit("render",a,b);var c=this.renderer.autoClear;this.renderer.autoClear=!1;this.clear();this.renderer.render(a,b,this.write());this.renderer.autoClear=c;this.options.autoAdvance&&this.advance()},uniform:function(a){var b=this.history();if(b){var c=[];_.loop(b+1,function(a){c.push(this.read(-a))}.bind(this));return{type:"tv",value:a,texture:c,count:b+1}}return{type:"t",value:a,
texture:this.read(),count:1}}};MicroEvent.mixin(ThreeRTT.RenderTarget);ThreeRTT.ScreenGeometry=function(){return new THREE.PlaneGeometry(2,2,1,1)};
ThreeRTT.FragmentMaterial=function(a,b,c,d){c=c||{};if(c instanceof Array){var e={};_.each(c,function(a){e["texture"+(f+1)]=a});c=e}else c.constructor!=Object&&(c={texture1:c});a instanceof Array||(a=[a]);a=_.map(a,function(a){return ThreeRTT.toTarget(a)});d=_.extend(d||{},{sampleStep:{type:"v2",value:new THREE.Vector2}});_.each(c,function(a,b){d[b]={type:"t",texture:ThreeRTT.toTexture(a)}});_.each(a,function(a,b){var c="texture"+(b+1);d[c]||(d[c]={type:"t",texture:a.read()})});var f=0;_.each(d,function(a){if("t"==
a.type)return a.value=f++;"tv"==a.type&&(a.value=f,f+=a.texture.length)});d.texture1&&!d.texture&&(d.texture=d.texture1);console.log(b,d);a[0].on("render",function(){var b=d.sampleStep.value;b.x=1/(a[0].width-1);b.y=1/(a[0].height-1)});return new THREE.ShaderMaterial({uniforms:d,vertexShader:ThreeRTT.getShader("generic-vertex-screen"),fragmentShader:ThreeRTT.getShader(b||"generic-fragment-texture")})};
ThreeRTT.DownsampleMaterial=function(a,b){var c={},a=ThreeRTT.toTarget(a),b=ThreeRTT.toTarget(b),c=_.extend(c,{sampleAlignment:{type:"v2",value:new THREE.Vector2},texture:{type:"t",value:0,texture:a.read()}});b.on("render",function(){var d=a,e=b,f=2*e.height/d.height,g=c.sampleAlignment.value;g.x=2*e.width/d.width;g.y=f});return new THREE.ShaderMaterial({uniforms:c,vertexShader:ThreeRTT.getShader("rtt-vertex-downsample"),fragmentShader:ThreeRTT.getShader("generic-fragment-texture")})};
ThreeRTT.RaytraceMaterial=function(a,b,c,d){c instanceof Array?_.each(c,function(){}):c.constructor!=Object&&(c={texture1:c});var a=ThreeRTT.toTarget(a),d=_.extend(d||{},{cameraViewport:{type:"v2",value:new THREE.Vector2},cameraWorld:{type:"m4",value:new THREE.Matrix4}}),e=0;_.each(c||[],function(a,b){d[b]={type:"t",value:e++,texture:ThreeRTT.toTexture(a)}});a.on("render",function(a,b){b.updateMatrixWorld();if(b.fov){var c=Math.tan(b.fov*\u03c0/360);d.cameraViewport.value.set(c*b.aspect,c)}b.matrixWorld&&
(d.cameraWorld.value=b.matrixWorld)});return new THREE.ShaderMaterial({uniforms:d,vertexShader:ThreeRTT.getShader("generic-vertex-screen"),fragmentShader:ThreeRTT.getShader(b)})};
